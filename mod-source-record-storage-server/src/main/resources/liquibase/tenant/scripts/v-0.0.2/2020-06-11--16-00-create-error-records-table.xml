<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd">

  <changeSet id="2020-06-11--16-00-create-error-records-table" author="WilliamWelling">
    <createTable tableName="error_records_lb">
      <column name="id" type="uuid">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="content" type="text">
        <constraints nullable="false"/>
      </column>
      <column name="description" type="varchar(1024)">
        <constraints nullable="false"/>
      </column>
    </createTable>
  </changeSet>

  <changeSet id="2020-06-11--16-01-add-error-records-records-foreign-key" author="WilliamWelling">
    <addForeignKeyConstraint
        baseColumnNames="id"
        baseTableName="error_records_lb"
        baseTableSchemaName="${database.defaultSchemaName}"
        constraintName="fk_error_records_records"
        deferrable="true"
        initiallyDeferred="true"
        onDelete="CASCADE"
        onUpdate="RESTRICT"
        referencedColumnNames="id"
        referencedTableName="records_lb"
        referencedTableSchemaName="${database.defaultSchemaName}"/>
  </changeSet>

  <changeSet id="2020-06-11--16-02-create-update-records-set-has-error-record-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.update_records_set_has_error_record() returns trigger
          language plpgsql
      as
      $$
      BEGIN
          IF (TG_OP = 'DELETE') THEN
            UPDATE ${database.defaultSchemaName}.records_lb SET has_error_record = false WHERE id = OLD.id;
            RETURN OLD;
          ELSE
            UPDATE ${database.defaultSchemaName}.records_lb SET has_error_record = true WHERE id = NEW.id;
            RETURN NEW;
          END IF;
      END;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-06-11--16-03-create-update-records-set-updated-date-trigger" author="WilliamWelling">
    <sql>
      create trigger update_records_set_has_error_record
          after insert or update or delete
          on ${database.defaultSchemaName}.error_records_lb
          for each row
      execute procedure ${database.defaultSchemaName}.update_records_set_has_error_record();
    </sql>
  </changeSet>

</databaseChangeLog>
