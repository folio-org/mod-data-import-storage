<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

  <changeSet id="2020-04-28--08-00-create-get-source-marc-record-by-id-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.get_source_marc_record_by_id(p_id uuid)
          returns TABLE
                  (
                      id    uuid,
                      jsonb jsonb
                  )
          language sql
      as
      $$
      select r.matchedId id, json_build_object('id', r.matchedid, 'content', mr.content)::jsonb jsonb
      from (select rds.matchedid, rds.id
            from ${database.defaultSchemaName}.records_lb rds
            where rds.matchedid = p_id
              and rds.state = 'ACTUAL') r
              inner join ${database.defaultSchemaName}.marc_records_lb mr on r.id = mr.id;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-04-28--08-01-create-get-source-marc-record-by-id-alt-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.get_source_marc_record_by_id_alt(p_id uuid)
          returns TABLE
                  (
                      id    uuid,
                      jsonb jsonb
                  )
          language sql
      as
      $$
      select r.matchedId id, json_build_object('id', r.matchedid, 'content', mr.content)::jsonb jsonb
      from (
              select rr.matchedid, rr.id
              from (
                        select id, matchedid, generation, max(generation) over (partition by matchedId) max_generation
                        from ${database.defaultSchemaName}.records_lb rds
                        where rds.matchedid = p_id) rr
              where generation = max_generation) r
              inner join ${database.defaultSchemaName}.marc_records_lb mr on r.id = mr.id;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-04-28--08-02-create-get-source-marc-record-by-instance-id-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.get_source_marc_record_by_instance_id(p_instanceid uuid)
          returns TABLE
                  (
                      id    uuid,
                      jsonb jsonb
                  )
          language sql
      as
      $$
      select r.matchedId id, json_build_object('id', r.matchedid, 'content', mr.content)::jsonb jsonb
      from (select rds.matchedid, rds.id
            from ${database.defaultSchemaName}.records_lb rds
            where rds.instanceId = p_instanceId
              and rds.state = 'ACTUAL') r
              inner join ${database.defaultSchemaName}.marc_records_lb mr on r.id = mr.id;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-04-28--08-03-create-get-source-marc-record-by-instance-id-alt-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.get_source_marc_record_by_instance_id_alt(p_instanceid uuid)
          returns TABLE
                  (
                      id    uuid,
                      jsonb jsonb
                  )
          language sql
      as
      $$
      select r.matchedId id, json_build_object('id', r.matchedid, 'content', mr.content)::jsonb jsonb
      from (
              select rr.matchedid, rr.id
              from (
                        select id, matchedid, generation, max(generation) over (partition by matchedId) max_generation
                        from ${database.defaultSchemaName}.records_lb rds
                        where rds.instanceid = p_instanceId) rr
              where generation = max_generation) r
              inner join ${database.defaultSchemaName}.marc_records_lb mr on r.id = mr.id;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-04-28--08-04-create-get-all-source-marc-records-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.get_all_source_marc_records(p_offset integer, p_limit integer)
          returns TABLE
                  (
                      id          uuid,
                      jsonb       jsonb,
                      total_count bigint
                  )
          language sql
      as
      $$
      select r.matchedId id, json_build_object('id', r.matchedid, 'content', mr.content)::jsonb jsonb, r.totalrows total_count
      from (select matchedid, id, count(*) OVER() totalrows
            from (select id, matchedid
                  from ${database.defaultSchemaName}.records_lb
                  where state = 'ACTUAL'
                  order by matchedid) rr
                offset p_offset
            limit p_limit) r
              inner join ${database.defaultSchemaName}.marc_records_lb mr on r.id = mr.id;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-04-28--08-05-create-get-all-source-marc-records-alt-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.get_all_source_marc_records_alt(p_offset integer, p_limit integer)
          returns TABLE
                  (
                      id          uuid,
                      jsonb       jsonb,
                      total_count bigint
                  )
          language sql
      as
      $$
      select r.matchedId id, json_build_object('id', r.matchedid, 'content', mr.content)::jsonb jsonb, r.totalrows total_count
      from (
              select matchedid, id, count(*) OVER() totalrows
              from (
                        select id, matchedid, generation, max(generation) over (partition by matchedId) max_generation
                        from ${database.defaultSchemaName}.records_lb
                        order by matchedid) rr
              where generation = max_generation
                  offset p_offset
              limit p_limit) r
              inner join ${database.defaultSchemaName}.marc_records_lb mr on r.id = mr.id;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-04-28--08-06-create-get-source-marc-records-for-period" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.get_source_marc_records_for_period(p_from timestamptz, p_till timestamptz, p_offset integer,
                                                                                       p_limit integer)
          returns TABLE
                  (
                      id          uuid,
                      jsonb       jsonb,
                      total_count bigint
                  )
          language sql
      as
      $$
      select r.matchedId id, json_build_object('id', r.matchedid, 'content', mr.content)::jsonb jsonb, r.totalrows total_count
      from (
              select matchedid, id, count(*) OVER() totalrows
              from ${database.defaultSchemaName}.records_lb
              where updateddate between p_from and p_till
                and state = 'ACTUAL'
              order by updateddate
                  offset p_offset
              limit p_limit) r
              inner join ${database.defaultSchemaName}.marc_records_lb mr on r.id = mr.id;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-04-28--08-07-create-get-source-marc-records-for-period-alt" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.get_source_marc_records_for_period_alt(p_from timestamptz, p_till timestamptz, p_offset integer,
                                                                                           p_limit integer)
          returns TABLE
                  (
                      id          uuid,
                      jsonb       jsonb,
                      total_count bigint
                  )
          language sql
      as
      $$
      select r.matchedId id, json_build_object('id', r.matchedid, 'content', mr.content)::jsonb jsonb, r.totalrows total_count
      from (
              select matchedid, id, count(*) OVER() totalrows
              from (
                        select id, matchedid, generation, max(generation) over (partition by matchedId) max_generation
                        from ${database.defaultSchemaName}.records_lb
                        where updateddate between p_from and p_till
                        order by updateddate) r
              where generation = max_generation
                  offset p_offset
              limit p_limit) r
              inner join ${database.defaultSchemaName}.marc_records_lb mr on r.id = mr.id;
      $$;
    </createProcedure>
  </changeSet>

</databaseChangeLog>
